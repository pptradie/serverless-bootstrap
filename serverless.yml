service: serverless-bootstrap

frameworkVersion: "3"

org: null
app: null

useDotenv: true

custom:
  profiles:
    dev: convergix
    prod: convergix
  doraEventBusName: ${self:service}-${sls:stage}-dora-bus-${aws:accountId}

provider:
  name: aws
  # profile: ${self:custom.profiles.${sls:stage}}
  runtime: nodejs18.x
  region: ap-southeast-2

  logs:
    httpApi:
      format: '{"requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod", "routeKey":"$context.routeKey", "status":"$context.status", "protocol":"$context.protocol", "responseLength":"$context.responseLength"}'

  httpApi:
    cors:
      allowedOrigins: ${env:APP_BASE_URL}
      allowedHeaders:
        - Authorization
        - Content-Type
      allowedMethods:
        - GET
        - POST
        - OPTIONS

  environment:
    DB_HOST: ${env:DB_HOST}
    DB_NAME: ${env:DB_NAME}
    DB_USERNAME: ${env:DB_USERNAME}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DORA_METRICS_NAMESPACE: "${self:service}/DORA"
    ENVIRONMENT: ${sls:stage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cloudwatch:PutMetricData
            - cloudwatch:GetMetricStatistics
          Resource: "*"
        - Effect: Allow
          Action:
            - events:PutEvents
          Resource: "*"

functions:
  dealFind:
    handler: src/functions/deal/dealFind.handler
    events:
      - httpApi:
          path: /deal/find
          method: get

  dealSave:
    handler: src/functions/deal/dealSave.handler
    events:
      - httpApi:
          path: /deal/save
          method: post

  doraMetrics:
    handler: src/functions/dora/metrics.handler
    events:
      - eventBridge:
          eventBus: ${self:custom.doraEventBusName}
          pattern:
            source:
              - serverless-app
            detail-type:
              - deployment_start
              - deployment_success
              - deployment_failure
              - incident_start
              - incident_resolve
    environment:
      DORA_METRICS_NAMESPACE: "${self:service}/DORA"
      ENVIRONMENT: ${sls:stage}

resources:
  Resources:
    # DoraEventBus:
    #   Type: AWS::Events::EventBus
    #   Properties:
    #     Name: ${self:custom.doraEventBusName}

    # DoraEventBusPolicy:
    #   Type: AWS::Events::EventBusPolicy
    #   DependsOn: DoraEventBus
    #   Properties:
    #     EventBusName: !Ref DoraEventBus
    #     StatementId: AllowPutEvents
    #     Statement:
    #       Effect: Allow
    #       Principal: "*"
    #       Action: events:PutEvents
    #       Resource: !GetAtt DoraEventBus.Arn

DoraDashboard:
  Type: AWS::CloudWatch::Dashboard
  Properties:
    DashboardName: ${self:service}-${sls:stage}-dora-metrics
    DashboardBody: !Sub |
      {
        "widgets": [
          {
            "type": "metric",
            "width": 12,
            "height": 6,
            "properties": {
              "view": "timeSeries",
              "metrics": [
                [ "serverless-bootstrap/DORA", "DeploymentFrequency", "Environment", "prod", { 
                  "stat": "Sum",
                  "period": 60,
                  "label": "Deployments"
                }]
              ],
              "region": "${AWS::Region}",
              "title": "Deployment Frequency",
              "yAxis": {
                "left": {
                  "min": 0,
                  "label": "Count"
                }
              },
              "defaultTimeRange": "-PT12H"
            }
          },
          {
            "type": "metric",
            "width": 12,
            "height": 6,
            "properties": {
              "view": "timeSeries",
              "metrics": [
                [ "serverless-bootstrap/DORA", "LeadTimeForChanges", "Environment", "prod", { 
                  "stat": "Average",
                  "period": 60,
                  "label": "Lead Time"
                }]
              ],
              "region": "${AWS::Region}",
              "title": "Lead Time for Changes",
              "yAxis": {
                "left": {
                  "min": 0,
                  "label": "Seconds"
                }
              },
              "defaultTimeRange": "-PT12H"
            }
          },
          {
            "type": "metric",
            "width": 24,
            "height": 3,
            "properties": {
              "metrics": [
                [ "serverless-bootstrap/DORA", "DeploymentFrequency", "Environment", "prod", { 
                  "stat": "Sum",
                  "period": 3600,
                  "label": "Deployments (last hour)"
                }],
                [ "serverless-bootstrap/DORA", "LeadTimeForChanges", "Environment", "prod", { 
                  "stat": "Average",
                  "period": 3600,
                  "label": "Avg Lead Time (seconds)"
                }]
              ],
              "view": "singleValue",
              "region": "${AWS::Region}",
              "title": "Last Hour Summary",
              "setPeriodToTimeRange": false,
              "singleValueFullPrecision": false
            }
          }
        ],
        "periodOverride": "inherit"
      }
