name: DEPLOY DEVELOPMENT BRANCH

on:
  push:
    branches:
      - staging

jobs:
  install:
    name: Install Dependencies
    uses: ./.github/workflows/install-deps.yml

  lint:
    name: Code Quality Check
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
      - uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
      - name: Run ESLint
        run: npm run lint
        continue-on-error: false

  test:
    name: Test and Coverage
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"
      - uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
      - name: Run tests with coverage
        run: npm run test:coverage
      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage-report
          path: coverage/lcov.info
          if-no-files-found: error

  code-analysis:
    name: Code Analysis & Security
    needs: test
    uses: ./.github/workflows/sonarqube.yml
    with:
      branch_name: "staging"
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
  # Place holder step for deployments
  deploy:
    name: Deploy
    needs: [lint, test, code-analysis]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3